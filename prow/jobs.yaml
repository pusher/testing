#############
###
### THIS IS AN AUTOGENERATED FILE!!! DO NOT EDIT THIS FILE DIRECTLY!!!
###
#############

apiVersion: v1
data:
  faros_faros-postsubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/faros
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true
      branches:
        - master
        # Abuse Prow to make it run on tag pushes like v1.2.3 and v1.2.3-rc1
        - ^v?\d+\.\d+\.\d+(-rc\d+)?$

    container_template: &container_template
      image: quay.io/pusher/kubebuilder-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    postsubmits:
      pusher/faros:
        - name: post-faros-build-docker
          <<: *job_template
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
            preset-snyk-token: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env && make prepare-env-1.14 &&
                  - TAGS=${PULL_BASE_REF},${PULL_BASE_SHA},latest
                  - PUSH_TAGS=${TAGS}
                  - make docker-build docker-scan docker-tag docker-push
                securityContext:
                  privileged: true
  faros_faros-presubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/faros
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true

    container_template: &container_template
      image: quay.io/pusher/kubebuilder-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_small: &container_template_small
      <<: *container_template
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    presubmits:
      pusher/faros:
        - name: pull-faros-verify-generate
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - touch .env && make prepare-env-1.14 && make verify-generate
          trigger: "(?m)^/test (?:.*? )?(verify-generate|all)(?: .*?)?$"
          rerun_command: "/test verify-generate"

        - name: pull-faros-verify-manifests
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - touch .env && make prepare-env-1.14 && make verify-manifests
          trigger: "(?m)^/test (?:.*? )?(verify-manifests|all)(?: .*?)?$"
          rerun_command: "/test verify-manifests"

        - name: pull-faros-lint
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - touch .env && make prepare-env-1.14 && make lint
          trigger: "(?m)^/test (?:.*? )?(lint|all)(?:.*? )?$"
          rerun_command: "/test lint"

        - name: pull-faros-build
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - touch .env && make prepare-env-1.14 && make build
          trigger: "(?m)^/test (?:.*? )?(build|all)(?:.*? )?$"
          rerun_command: "/test build"

        - name: pull-faros-scan
          <<: *job_template
          labels:
            preset-snyk-token: "true"
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - touch .env && make prepare-env-1.14 && make scan
          trigger: "(?m)^/test (?:.*? )?(scan|all)(?:.*? )?$"
          rerun_command: "/test scan"

        - name: pull-faros-test-1.14
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env && make prepare-env-1.14 && make test
                resources:
                  requests:
                    cpu: 3
                    memory: 2Gi
          trigger: "(?m)^/test (?:.*? )?(1\\.14|all)(?: .*?)?$"
          rerun_command: "/test 1.14"

        - name: pull-faros-test-1.13
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env && make prepare-env-1.13 && make test
          trigger: "(?m)^/test (?:.*? )?(1\\.13|all)(?: .*?)?$"
          rerun_command: "/test 1.13"

        - name: pull-faros-test-1.12
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env && make prepare-env-1.12 && SKIP_DRY_RUN_TESTS=true make test
          trigger: "(?m)^/test (?:.*? )?(1\\.12|all)(?: .*?)?$"
          rerun_command: "/test 1.12"

        - name: pull-faros-build-docker
          <<: *job_template
          always_run: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
            preset-snyk-token: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env && make prepare-env-1.14 &&
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - PUSH_TAGS=${TAGS}
                  - make docker-build docker-scan docker-tag docker-push
                securityContext:
                  privileged: true
          trigger: "(?m)^/build (?:.*? )?(docker|all)(?: .*?)?$"
          rerun_command: "/build docker"
  git-store_git-store-presubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/git-store
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true

    container_template: &container_template
      image: quay.io/pusher/golang-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_small: &container_template_small
      <<: *container_template
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi

    presubmits:
      pusher/git-store:
        - name: pull-git-store-lint
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make fmt vet lint
          trigger: "(?m)^/test (?:.*? )?(lint|all)(?:.*? )?$"
          rerun_command: "/test lint"

        - name: pull-git-store-test
          <<: *job_template
          labels:
            preset-golang-junit: "true"
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make test
          trigger: "(?m)^/test (?:.*? )?(tests|all)(?: .*?)?$"
          rerun_command: "/test tests"
  istio_istio.pusher-release-1.2.yaml: |
    job_template: &job_template
      branches:
      - "^pusher-release-1.2.*$"
      decorate: true
      decoration_config:
        utility_images:
          clonerefs: "gcr.io/k8s-prow/clonerefs:v20181017-d31417a"
      path_alias: istio.io/istio

    istio_container: &istio_container
      image: gcr.io/istio-testing/istio-builder:v20190823-25f7c637
      # Docker in Docker
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "2Gi"
          cpu: "3000m"
        limits:
          memory: "24Gi"
          cpu: "3000m"

    presubmits:

      pusher/istio:

      - name: istio-unit-tests-release-1.2
        <<: *job_template
        context: prow/istio-unit-tests.sh
        always_run: true
        labels:
          preset-root-quay-credentials: "true"
          preset-ci-env: "true"
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/istio-unit-tests.sh

      - name: integ-framework-local-presubmit-tests-release-1.2
        <<: *job_template
        context: prow/integ-framework-local-presubmit-tests.sh
        always_run: true
        labels:
          preset-root-quay-credentials: "true"
          preset-ci-env: "true"
        spec:
          containers:
            - <<: *istio_container
              command:
                - entrypoint
                - prow/integ-framework-local-presubmit-tests.sh

      - name: integ-galley-local-presubmit-tests-release-1.2
        <<: *job_template
        context: prow/integ-galley-local-presubmit-tests.sh
        always_run: true
        spec:
          containers:
            - <<: *istio_container
              command:
                - entrypoint
                - prow/integ-galley-local-presubmit-tests.sh

      - name: integ-mixer-local-presubmit-tests-release-1.2
        <<: *job_template
        optional: true
        context: prow/integ-mixer-local-presubmit-tests.sh
        always_run: true
        labels:
          preset-root-quay-credentials: "true"
          preset-ci-env: "true"
        spec:
          containers:
            - <<: *istio_container
              command:
                - entrypoint
                - prow/integ-mixer-local-presubmit-tests.sh

      - name: integ-pilot-local-presubmit-tests-release-1.2
        <<: *job_template
        context: prow/integ-pilot-local-presubmit-tests.sh
        always_run: true
        labels:
          preset-root-quay-credentials: "true"
          preset-ci-env: "true"
        spec:
          containers:
            - <<: *istio_container
              command:
                - entrypoint
                - prow/integ-pilot-local-presubmit-tests.sh

      - name: integ-security-local-presubmit-tests-release-1.2
        <<: *job_template
        context: prow/integ-security-local-presubmit-tests.sh
        always_run: true
        labels:
          preset-root-quay-credentials: "true"
          preset-ci-env: "true"
        spec:
          containers:
            - <<: *istio_container
              command:
                - entrypoint
                - prow/integ-security-local-presubmit-tests.sh

      - name: release-test-release-1.2
        <<: *job_template
        always_run: true
        context: prow/release-test.sh
        labels:
          preset-root-quay-credentials: "true"
          preset-ci-env: "true"
        max_concurrency: 5
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/release-test.sh

      - name: istio-presubmit
        <<: *job_template
        context: prow/istio-presubmit.sh
        always_run: true
        labels:
          preset-root-quay-credentials: "true"
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/istio-presubmit.sh

    postsubmits:

      pusher/istio:
      - name: istio-integ-local-tests-release-1.2
        <<: *job_template
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/istio-integ-local-tests.sh

      - name: istio-unit-tests-postsubmit-release-1.2
        <<: *job_template
        context: prow/istio-unit-tests.sh
        always_run: true
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/istio-unit-tests.sh
  istio_istio.pusher-release.yaml: |
    job_template: &job_template
      branches:
      - "^pusher-release-1.1.*$"
      decorate: true
      decoration_config:
        utility_images:
          clonerefs: "gcr.io/k8s-prow/clonerefs:v20181017-d31417a"
      path_alias: istio.io/istio

    istio_container: &istio_container
      image: gcr.io/istio-testing/istio-builder:v20181008-db31a9fd
      # Docker in Docker
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "512Mi"
          cpu: "500m"
        limits:
          memory: "24Gi"
          cpu: "7000m"

    presubmits:

      pusher/istio:

      - name: istio-unit-tests
        <<: *job_template
        context: prow/istio-unit-tests.sh
        always_run: true
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/istio-unit-tests.sh


      - name: istio-integ-local-tests
        <<: *job_template
        context: prow/istio-integ-local-tests.sh
        always_run: true
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/istio-integ-local-tests.sh


      - name: istio-presubmit
        <<: *job_template
        context: prow/istio-presubmit.sh
        always_run: true
        labels:
          preset-root-quay-credentials: "true"
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/istio-presubmit.sh

        run_after_success:
        - name: istio-integ-k8s-tests
          <<: *job_template
          optional: true
          context: prow/istio-integ-k8s-tests.sh
          max_concurrency: 5
          always_run: true
          optional: true
          labels:
            preset-root-quay-credentials: "true"
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/istio-integ-k8s-tests.sh

        - name: test-e2e-mixer-no_auth
          <<: *job_template
          optional: true
          skip_report: true
          context: "prow: test-e2e-mixer-no_auth"
          max_concurrency: 5
          labels:
            preset-root-quay-credentials: "true"
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/test-e2e-mixer-no_auth.sh

        - name: istio-pilot-e2e-envoyv2-v1alpha3
          <<: *job_template
          always_run: true
          context: prow/istio-pilot-e2e-envoyv2-v1alpha3.sh
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/istio-pilot-e2e-envoyv2-v1alpha3.sh

        - name: e2e-mixer-no_auth
          <<: *job_template
          always_run: true
          context: prow/e2e-mixer-no_auth.sh
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-mixer-no_auth.sh

        - name: e2e-dashboard
          <<: *job_template
          always_run: true
          context: prow/e2e-dashboard.sh
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-dashboard.sh

        - name: e2e-bookInfoTests-envoyv2-v1alpha3
          <<: *job_template
          always_run: true
          context: prow/e2e-bookInfoTests-v1alpha3.sh
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-bookInfoTests-envoyv2-v1alpha3.sh

        - name: e2e-bookInfoTests-trustdomain
          <<: *job_template
          always_run: true
          context: prow/e2e-bookInfoTests-trustdomain.sh
          optional: true
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-bookInfoTests-trustdomain.sh

        - name: e2e-simpleTests
          <<: *job_template
          always_run: true
          context: prow/e2e-simpleTests.sh
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-simpleTests.sh

        - name: istio-pilot-multicluster-e2e
          <<: *job_template
          always_run: true
          context: prow/istio-pilot-multicluster-e2e.sh
          optional: true
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/istio-pilot-multicluster-e2e.sh

        - name: e2e-simpleTests-cni
          <<: *job_template
          always_run: false
          context: prow/e2e-simpleTests-cni.sh
          optional: true
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-simpleTests-cni.sh
            nodeSelector:
        - name: istio_auth_sds_e2e
          <<: *job_template
          always_run: true
          context: prow/e2e_pilotv2_auth_sds.sh
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e_pilotv2_auth_sds.sh

        - name: release-test
          <<: *job_template
          always_run: true
          context: prow/release-test.sh
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/release-test.sh



    postsubmits:

      pusher/istio:
      - name: istio-integ-local-tests
        <<: *job_template
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/istio-integ-local-tests.sh

      - name: istio-postsubmit
        <<: *job_template
        labels:
          preset-root-quay-credentials: "true"
        spec:
          containers:
          - <<: *istio_container
            command:
            - entrypoint
            - prow/istio-postsubmit.sh

        run_after_success:
        - name: istio-integ-k8s-tests
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/istio-integ-k8s-tests.sh

        - name: e2e-simpleTests
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-simpleTests.sh

        - name: e2e-simpleTests-non-mcp
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-simpleTests-non-mcp.sh

        - name: e2e-bookInfoTests-envoyv2-v1alpha3
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-bookInfoTests-envoyv2-v1alpha3.sh

        - name: istio-pilot-e2e-envoyv2-v1alpha3
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/istio-pilot-e2e-envoyv2-v1alpha3.sh

        - name: istio-pilot-e2e-envoyv2-v1alpha3-k8s-latest
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/istio-pilot-e2e-envoyv2-v1alpha3-k8s-latest.sh

        - name: e2e-bookInfoTests-envoyv2-v1alpha3-non-mcp
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-bookInfoTests-envoyv2-v1alpha3-non-mcp.sh

        - name: e2e-mixer-no_auth
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-mixer-no_auth.sh

        - name: e2e-dashboard
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e-dashboard.sh

        - name: istio_auth_sds_e2e
          <<: *job_template
          labels:
            preset-root-quay-credentials: "true"
          max_concurrency: 5
          spec:
            containers:
            - <<: *istio_container
              command:
              - entrypoint
              - prow/e2e_pilotv2_auth_sds.sh
  k8s-spot-price-monitor_k8s-spot-price-monitor-postsubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/k8s-spot-price-monitor
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true
      branches:
        - master
        # Abuse Prow to make it run on tag pushes like v1.2.3 and v1.2.3-rc1
        - ^v?\d+\.\d+\.\d+(-rc\d+)?$

    container_template: &container_template
      image: quay.io/pusher/python-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    postsubmits:
      pusher/k8s-spot-price-monitor:
        - name: post-k8s-spot-price-monitor-build-docker
          <<: *job_template
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - TAGS=${PULL_BASE_REF},${PULL_BASE_SHA},latest
                  - PUSH_TAGS=${TAGS}
                  - make docker-push
                securityContext:
                  privileged: true
  k8s-spot-price-monitor_k8s-spot-price-monitor-presubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/k8s-spot-price-monitor
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true

    container_template: &container_template
      image: quay.io/pusher/python-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_small: &container_template_small
      <<: *container_template
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    presubmits:
      pusher/k8s-spot-price-monitor:
        - name: pull-k8s-spot-price-monitor-lint
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - make lint
          trigger: "(?m)^/test (?:.*? )?(lint|all)(?:.*? )?$"
          rerun_command: "/test lint"

        - name: pull-k8s-spot-price-monitor-build-docker
          <<: *job_template
          always_run: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - PUSH_TAGS=${TAGS}
                  - make docker-push
                securityContext:
                  privileged: true
          trigger: "(?m)^/build (?:.*? )?(docker|all)(?: .*?)?$"
          rerun_command: "/build docker"
  k8s-spot-rescheduler_k8s-spot-rescheduler-postsubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/k8s-spot-rescheduler
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true
      branches:
        - master
        # Abuse Prow to make it run on tag pushes like v1.2.3 and v1.2.3-rc1
        - ^v?\d+\.\d+\.\d+(-rc\d+)?$

    container_template: &container_template
      image: quay.io/pusher/golang-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    postsubmits:
      pusher/k8s-spot-rescheduler:
        - name: post-k8s-spot-rescheduler-build-docker
          <<: *job_template
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - ./configure &&
                  - TAGS=${PULL_BASE_REF},${PULL_BASE_SHA},latest
                  - PUSH_TAGS=${TAGS}
                  - make docker-build docker-tag docker-push
                securityContext:
                  privileged: true
  k8s-spot-rescheduler_k8s-spot-rescheduler-presubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/k8s-spot-rescheduler
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true

    container_template: &container_template
      image: quay.io/pusher/golang-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_small: &container_template_small
      <<: *container_template
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    presubmits:
      pusher/k8s-spot-rescheduler:
        - name: pull-k8s-spot-rescheduler-lint
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make fmt vet lint
          trigger: "(?m)^/test (?:.*? )?(lint|all)(?:.*? )?$"
          rerun_command: "/test lint"

        - name: pull-k8s-spot-rescheduler-build
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make build
          trigger: "(?m)^/test (?:.*? )?(build|all)(?:.*? )?$"
          rerun_command: "/test build"

        - name: pull-k8s-spot-rescheduler-tests
          <<: *job_template
          labels:
            preset-golang-junit: "true"
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make test
          trigger: "(?m)^/test (?:.*? )?(tests|all)(?: .*?)?$"
          rerun_command: "/test tests"

        - name: pull-k8s-spot-rescheduler-build-docker
          <<: *job_template
          always_run: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - ./configure;
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - PUSH_TAGS=${TAGS}
                  - make docker-build docker-tag docker-push
                securityContext:
                  privileged: true
          trigger: "(?m)^/build (?:.*? )?(docker|all)(?: .*?)?$"
          rerun_command: "/build docker"
  k8s-spot-termination-handler_k8s-spot-termination-handler-postsubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/k8s-spot-termination-handler
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true
      branches:
        - master
        # Abuse Prow to make it run on tag pushes like v1.2.3 and v1.2.3-rc1
        - ^v?\d+\.\d+\.\d+(-rc\d+)?$

    container_template: &container_template
      image: quay.io/pusher/python-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    postsubmits:
      pusher/k8s-spot-termination-handler:
        - name: post-k8s-spot-termination-handler-build-docker
          <<: *job_template
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - TAGS=${PULL_BASE_REF},${PULL_BASE_SHA},latest
                  - PUSH_TAGS=${TAGS}
                  - make docker-push
                securityContext:
                  privileged: true
  k8s-spot-termination-handler_k8s-spot-termination-handler-presubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/k8s-spot-termination-handler
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true

    container_template: &container_template
      image: quay.io/pusher/python-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_small: &container_template_small
      <<: *container_template
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    presubmits:
      pusher/k8s-spot-termination-handler:
        - name: pull-k8s-spot-termination-handler-lint
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - make lint
          trigger: "(?m)^/test (?:.*? )?(lint|all)(?:.*? )?$"
          rerun_command: "/test lint"

        - name: pull-k8s-spot-termination-handler-build-docker
          <<: *job_template
          always_run: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - PUSH_TAGS=${TAGS}
                  - make docker-push
                securityContext:
                  privileged: true
          trigger: "(?m)^/build (?:.*? )?(docker|all)(?: .*?)?$"
          rerun_command: "/build docker"
  prom-rule-reloader_prom-rule-reloader-postsubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/prom-rule-reloader
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true
      branches:
        - master
        # Abuse Prow to make it run on tag pushes like v1.2.3 and v1.2.3-rc1
        - ^v?\d+\.\d+\.\d+(-rc\d+)?$

    container_template: &container_template
      image: quay.io/pusher/golang-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    postsubmits:
      pusher/prom-rule-reloader:
        - name: post-prom-rule-reloader-build-docker
          <<: *job_template
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env; # No config necessary
                  - TAGS=${PULL_BASE_REF},${PULL_BASE_SHA},latest
                  - PUSH_TAGS=${TAGS}
                  - touch .env && make docker-build docker-tag docker-push
                securityContext:
                  privileged: true
  prom-rule-reloader_prom-rule-reloader-presubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/prom-rule-reloader
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true

    container_template: &container_template
      image: quay.io/pusher/golang-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_small: &container_template_small
      <<: *container_template
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    presubmits:
      pusher/prom-rule-reloader:
        - name: pull-prom-rule-reloader-lint
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make fmt vet lint
          trigger: "(?m)^/test (?:.*? )?(lint|all)(?:.*? )?$"
          rerun_command: "/test lint"

        - name: pull-prom-rule-reloader-build
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make build
          trigger: "(?m)^/test (?:.*? )?(build|all)(?:.*? )?$"
          rerun_command: "/test build"

        - name: pull-prom-rule-reloader-tests
          <<: *job_template
          labels:
            preset-golang-junit: "true"
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make test
          trigger: "(?m)^/test (?:.*? )?(tests|all)(?: .*?)?$"
          rerun_command: "/test tests"

        - name: pull-prom-rule-reloader-build-docker
          <<: *job_template
          always_run: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - ./configure;
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - PUSH_TAGS=${TAGS}
                  - make docker-build docker-tag docker-push
                securityContext:
                  privileged: true
          trigger: "(?m)^/build (?:.*? )?(docker|all)(?: .*?)?$"
          rerun_command: "/build docker"
  quack_quack-postsubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/quack
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true
      branches:
        - master
        # Abuse Prow to make it run on tag pushes like v1.2.3 and v1.2.3-rc1
        - ^v?\d+\.\d+\.\d+(-rc\d+)?$

    container_template: &container_template
      image: quay.io/pusher/golang-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    postsubmits:
      pusher/quack:
        - name: post-quack-build-docker
          <<: *job_template
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - TAGS=${PULL_BASE_REF},${PULL_BASE_SHA},latest
                  - PUSH_TAGS=${TAGS}
                  - ./configure && make docker-build docker-tag docker-push
                securityContext:
                  privileged: true
  quack_quack-presubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/quack
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true

    container_template: &container_template
      image: quay.io/pusher/golang-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_small: &container_template_small
      <<: *container_template
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    presubmits:
      pusher/quack:
        - name: pull-quack-lint
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make fmt vet lint
          trigger: "(?m)^/test (?:.*? )?(lint|all)(?:.*? )?$"
          rerun_command: "/test lint"

        - name: pull-quack-build
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make build
          trigger: "(?m)^/test (?:.*? )?(build|all)(?:.*? )?$"
          rerun_command: "/test build"

        - name: pull-quack-tests
          <<: *job_template
          labels:
            preset-golang-junit: "true"
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - ./configure && make test
          trigger: "(?m)^/test (?:.*? )?(tests|all)(?: .*?)?$"
          rerun_command: "/test tests"

        - name: pull-quack-build-docker
          <<: *job_template
          always_run: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - ./configure;
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - PUSH_TAGS=${TAGS}
                  - make docker-build docker-tag docker-push
                securityContext:
                  privileged: true
          trigger: "(?m)^/build (?:.*? )?(docker|all)(?: .*?)?$"
          rerun_command: "/build docker"
  testing_testing-postsubmits.yaml: |
    postsubmits:
      pusher/testing:
        - name: post-testing-build-docker
          max_concurrency: 10
          path_alias: github.com/pusher/testing
          agent: kubernetes
          branches:
            - master
          always_run: true
          decorate: true
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - image: quay.io/pusher/builder:v20190821-328974b
                name: build-docker
                command: ["/usr/local/bin/runner"]
                args:
                  - make --directory=images push
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
                securityContext:
                  privileged: true

        - name: post-testing-build-docker-pipeline
          max_concurrency: 10
          path_alias: github.com/pusher/testing
          agent: tekton-pipeline
          branches:
            - master
          always_run: true
          skip_report: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          pipeline_run_spec:
              pipelineRef:
                name: testing-post-builder-images
              resources:
              - name: testing
                resourceRef:
                  name: PROW_IMPLICIT_GIT_REF
          trigger: "(?m)^/build docker-pipeline,?(\\s+|$)"
          rerun_command: "/build docker-pipeline"

        - name: post-testing-promoter-build-docker
          max_concurrency: 10
          path_alias: github.com/pusher/testing
          agent: kubernetes
          branches:
            - master
          always_run: true
          decorate: true
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - image: quay.io/pusher/builder:v20190821-328974b
                name: build-docker
                command: ["/usr/local/bin/runner"]
                args:
                  - make --directory=plugins/promoter docker-build docker-tag docker-push
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
                securityContext:
                  privileged: true
  testing_testing-presubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/testing
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true

    container_template: &container_template
      image: quay.io/pusher/golang-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_small: &container_template_small
      <<: *container_template
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    presubmits:
      pusher/testing:
        - name: pull-testing-verify-config
          max_concurrency: 10
          path_alias: github.com/pusher/testing
          agent: kubernetes
          always_run: true
          skip_report: false
          decorate: true
          spec:
            containers:
              - image: quay.io/pusher/kubebuilder-builder:v20190821-328974b
                name: verify-config
                command: ["/usr/local/bin/runner"]
                args:
                  - make verify-config
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
          trigger: "(?m)^/verify config,?(\\s+|$)"
          rerun_command: "/verify config"

        - name: pull-testing-verify-image-tags
          max_concurrency: 10
          path_alias: github.com/pusher/testing
          agent: kubernetes
          always_run: true
          skip_report: false
          decorate: true
          spec:
            containers:
              - image: quay.io/pusher/kubebuilder-builder:v20190821-328974b
                name: verify-image-tags
                command: ["/usr/local/bin/runner"]
                args:
                  - make verify-image-tags
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
          trigger: "(?m)^/verify image-tags,?(\\s+|$)"
          rerun_command: "/verify image-tags"

        - name: pull-testing-build-docker
          max_concurrency: 10
          path_alias: github.com/pusher/testing
          agent: kubernetes
          run_if_changed: "^(images/.*)"
          skip_report: false
          decorate: true
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - image: quay.io/pusher/builder:v20190821-328974b
                name: build-docker
                command: ["/usr/local/bin/runner"]
                args:
                  - VERSION=pull-${PULL_NUMBER}
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - make --directory=images push
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
                securityContext:
                  privileged: true
          trigger: "(?m)^/build docker,?(\\s+|$)"
          rerun_command: "/build docker"

        - name: pull-testing-build-docker-pipeline
          max_concurrency: 10
          path_alias: github.com/pusher/testing
          agent: tekton-pipeline
          run_if_changed: "^(images/.*)"
          skip_report: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          pipeline_run_spec:
              pipelineRef:
                name: testing-pull-builder-images
              resources:
              - name: testing
                resourceRef:
                  name: PROW_IMPLICIT_GIT_REF
          trigger: "(?m)^/build docker-pipeline,?(\\s+|$)"
          rerun_command: "/build docker-pipeline"


        - name: pull-testing-promoter-lint
          <<: *job_template
          always_run: false
          run_if_changed: "^(plugins/promoter/.*)"
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - make --directory=plugins/promoter lint
          trigger: "(?m)^/test (?:.*? )?(promoter-lint|all)(?:.*? )?$"
          rerun_command: "/test promoter-lint"

        - name: pull-testing-promoter-build
          <<: *job_template
          always_run: false
          run_if_changed: "^(plugins/promoter/.*)"
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - make --directory=plugins/promoter build
          trigger: "(?m)^/test (?:.*? )?(promoter-build|all)(?:.*? )?$"
          rerun_command: "/test promoter-build"

        - name: pull-testing-promoter-test
          <<: *job_template
          always_run: false
          run_if_changed: "^(plugins/promoter/.*)"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - make --directory=plugins/promoter test
          trigger: "(?m)^/test (?:.*? )?(promoter-test|all)(?: .*?)?$"
          rerun_command: "/test promoter-test"

        - name: pull-testing-promoter-build-docker
          <<: *job_template
          always_run: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - PUSH_TAGS=${TAGS}
                  - make --directory=plugins/promoter docker-build docker-tag docker-push
                securityContext:
                  privileged: true
          trigger: "(?m)^/build (?:.*? )?(promoter-docker|all)(?: .*?)?$"
          rerun_command: "/build promoter-docker"
  wave_wave-postsubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/wave
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true
      branches:
        - master
        # Abuse Prow to make it run on tag pushes like v1.2.3 and v1.2.3-rc1
        - ^v?\d+\.\d+\.\d+(-rc\d+)?$

    container_template: &container_template
      image: quay.io/pusher/kubebuilder-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    postsubmits:
      pusher/wave:
        - name: post-wave-build-docker
          <<: *job_template
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env; # No config necessary
                  - TAGS=${PULL_BASE_REF},${PULL_BASE_SHA},latest
                  - PUSH_TAGS=${TAGS}
                  - make docker-build docker-tag docker-push
                securityContext:
                  privileged: true
  wave_wave-presubmits.yaml: |
    job_template: &job_template
      max_concurrency: 10
      path_alias: github.com/pusher/wave
      agent: kubernetes
      always_run: true
      skip_report: false
      decorate: true

    container_template: &container_template
      image: quay.io/pusher/kubebuilder-builder:v20190821-328974b
      name: runner
      command: ["/usr/local/bin/runner"]

    container_template_small: &container_template_small
      <<: *container_template
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi

    container_template_large: &container_template_large
      <<: *container_template
      resources:
        requests:
          cpu: 4
          memory: 4Gi
        limits:
          cpu: 8
          memory: 8Gi

    presubmits:
      pusher/wave:
        - name: pull-wave-verify-generate
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - touch .env && make prepare-env-1.14 && make verify-generate
          trigger: "(?m)^/test (?:.*? )?(verify-generate|all)(?: .*?)?$"
          rerun_command: "/test verify-generate"

        - name: pull-wave-verify-manifests
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - touch .env && make prepare-env-1.14 && make verify-manifests
          trigger: "(?m)^/test (?:.*? )?(verify-manifests|all)(?: .*?)?$"
          rerun_command: "/test verify-manifests"

        - name: pull-wave-lint
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - touch .env && make prepare-env-1.14 && make lint
          trigger: "(?m)^/test (?:.*? )?(lint|all)(?:.*? )?$"
          rerun_command: "/test lint"

        - name: pull-wave-build
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_small
                args:
                  - touch .env && make prepare-env-1.14 && make build
          trigger: "(?m)^/test (?:.*? )?(build|all)(?:.*? )?$"
          rerun_command: "/test build"

        - name: pull-wave-test-1.14
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env && make prepare-env-1.14 && make test
          trigger: "(?m)^/test (?:.*? )?(1\\.14|all)(?: .*?)?$"
          rerun_command: "/test 1.14"

        - name: pull-wave-test-1.13
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env && make prepare-env-1.13 && make test
          trigger: "(?m)^/test (?:.*? )?(1\\.13|all)(?: .*?)?$"
          rerun_command: "/test 1.13"

        - name: pull-wave-test-1.12
          <<: *job_template
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env && make prepare-env-1.12 && make test
          trigger: "(?m)^/test (?:.*? )?(1\\.12|all)(?: .*?)?$"
          rerun_command: "/test 1.12"

        - name: pull-wave-build-docker
          <<: *job_template
          always_run: false
          labels:
            preset-dind-enabled: "true"
            preset-quay-credentials: "true"
          spec:
            containers:
              - <<: *container_template_large
                args:
                  - touch .env; # No config necessary
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - PUSH_TAGS=${TAGS}
                  - make docker-build docker-tag docker-push
                securityContext:
                  privileged: true
          trigger: "(?m)^/build (?:.*? )?(docker|all)(?: .*?)?$"
          rerun_command: "/build docker"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: jobs
  namespace: default
